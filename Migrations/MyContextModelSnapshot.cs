// <auto-generated />
using System;
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Models.GitRepository", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext")
                        .HasColumnName("FullName");

                    b.Property<string>("Homepage")
                        .HasColumnType("longtext")
                        .HasColumnName("Homepage");

                    b.Property<string>("HtmlUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("HtmlUrl");

                    b.Property<string>("Language")
                        .HasColumnType("longtext")
                        .HasColumnName("Language");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<string>("NodeId")
                        .HasColumnType("longtext")
                        .HasColumnName("NodeId");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("GitRepository");
                });

            modelBuilder.Entity("Api.Models.GitRepositoryOwner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AvatarUrl");

                    b.Property<string>("HtmlUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("HtmlUrl");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Login");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NodeId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("GitRepositoryOwner");
                });

            modelBuilder.Entity("Api.Models.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("ProgrammingLanguages");
                });

            modelBuilder.Entity("Api.Models.GitRepository", b =>
                {
                    b.HasOne("Api.Models.GitRepositoryOwner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
